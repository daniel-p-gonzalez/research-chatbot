#!/usr/bin/env zsh

set -e

env=${1:-staging}

# echo yes if env equals prod
if [ "$env" = "prod" ]; then
  env=""
else
  env="-${env}"
fi

# error if PUBLIC_ENV__EMBED_SCRIPT_URL is not set
if [ -z "$PUBLIC_ENV__EMBED_SCRIPT_URL" ]; then
  echo "PUBLIC_ENV__EMBED_SCRIPT_URL is not set, source ./deploy/set-env <env>"
  exit 1
fi

ASSETS_BUCKET=kinetic${env}-chatbot-assets
export AWS_PAGER="" # silence cli using "less" to display output

yarn run build:all

# mv dist/embed* dist/client/assets/static/

cd dist

for file in *-lambda.js; do
  handler="${file%-lambda.js}"
  echo "bundling $handler"

  lambda="kinetic${env}-$handler"

  echo "updating $lambda"

  zip $handler.zip $file

  aws lambda update-function-code --function-name $lambda --zip-file fileb://./$handler.zip >> deploy.log
  sleep 2

  aws lambda publish-version --function-name $lambda >> deploy.log
  sleep 2
done

s5cmd sync client/ s3://${ASSETS_BUCKET}/


# s5cmd cp dist/assets/ s3://$ASSETS_BUCKET/assets/
# s5cmd cp  -acl public-read error.html s3://$ASSETS_BUCKET/error.html
# s5cmd cp  -acl public-read dist/index.html s3://$ASSETS_BUCKET/editor/index.html
