version: "3.8"
services:
#  dynamodb:
#    image: amazon/dynamodb-local
#    networks:
#      - chatbot
#    restart: always
#    healthcheck:
#      test: [ "CMD-SHELL", "curl -f http://localhost:8000/shell/ || exit 1" ]
#      interval: 1s
#      timeout: 10s
#      retries: 3
#    command: -jar DynamoDBLocal.jar -sharedDb -dbPath .
#    ports:
#      - "8000:8000"
#    expose:
#      - "8000"
  dynamodb:
    image: "amazon/dynamodb-local:latest"
    restart: always
    container_name: dynamodb
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath .
    ports:
      - "8000:8000"
    environment:
      AWS_ACCESS_KEY_ID: ASDF
      AWS_SECRET_ACCESS_KEY: ASDF
#      AWS_SESSION_TOKEN: ""
      AWS_DEFAULT_REGION: local-env
    expose:
      - "8000"
  init-db:
    depends_on:
      - dynamodb
    image: amazon/aws-cli
    environment:
      AWS_ACCESS_KEY_ID: ASDF
      AWS_SECRET_ACCESS_KEY: ASDF
    command: >-
      dynamodb create-table 
        --region local-env 
        --endpoint-url http://dynamodb:8000
        --table-name TutorChatBot
        --attribute-definitions AttributeName=pk,AttributeType=S AttributeName=sk,AttributeType=S AttributeName=gs1,AttributeType=S
        --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
        --key-schema AttributeName=pk,KeyType=HASH AttributeName=sk,KeyType=RANGE
        --global-secondary-indexes '
          [
            {
              "IndexName": "gs1",
              "KeySchema": [
                { "AttributeName": "gs1", "KeyType": "HASH" }
              ],
              "Projection": {
                "ProjectionType": "ALL"
              },
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          ]
        '

#      DB_NAME=table_name
#
#      if aws dynamodb describe-table --table-name $DB_NAME 2>/dev/null; then
#          echo "DynamoDB Table: $DB_NAME found, Skipping DynamoDB table creation ..."
#      else
#          echo "DynamoDB Table: $DB_NAME not found, Creating DynamoDB table ..."
#          aws dynamodb create-table --table-name $DB_NAME --attribute-definitions AttributeName=LockID,AttributeType=S --key-schema AttributeName=LockID,KeyType=HASH --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
#      fi

  server:
    container_name: server
    depends_on:
      - dynamodb
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
    environment:
      AWS_ACCESS_KEY_ID: ASDF
      AWS_SECRET_ACCESS_KEY: ASDF
      AWS_DEFAULT_REGION: local-env
    ports:
      - "3000:3000"

volumes:
  dynamodata: {}
