version: "3.8"
services:
  dynamodb:
    image: "amazon/dynamodb-local:latest"
    restart: always
    container_name: dynamodb
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath .
    ports:
      - "8000:8000"
    environment:
      AWS_ACCESS_KEY_ID: FAKEKEY
      AWS_SECRET_ACCESS_KEY: FAKEKEY
      AWS_DEFAULT_REGION: local-env
    expose:
      - "8000"
  init-db:
    depends_on:
      - dynamodb
    image: amazon/aws-cli
    environment:
      AWS_ACCESS_KEY_ID: FAKEKEY
      AWS_SECRET_ACCESS_KEY: FAKEKEY
    command: >-
      dynamodb create-table 
        --region local-env 
        --endpoint-url http://dynamodb:8000
        --table-name TutorChatBot
        --attribute-definitions AttributeName=pk,AttributeType=S AttributeName=sk,AttributeType=S AttributeName=gs1,AttributeType=S
        --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
        --key-schema AttributeName=pk,KeyType=HASH AttributeName=sk,KeyType=RANGE
        --global-secondary-indexes '
          [
            {
              "IndexName": "gs1",
              "KeySchema": [
                { "AttributeName": "gs1", "KeyType": "HASH" }
              ],
              "Projection": {
                "ProjectionType": "ALL"
              },
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          ]
        '
  server:
    container_name: server
    restart: always
    depends_on:
      - dynamodb
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
    environment:
      AWS_ACCESS_KEY_ID: FAKEKEY
      AWS_SECRET_ACCESS_KEY: FAKEKEY
      AWS_DEFAULT_REGION: local-env
      DYNAMO_HOST: dynamodb
#     Add dynamo_host variable
    ports:
      - "3000:3000"
      - "24678:24678"
    volumes:
      - ./:/app
      - ignore:/app/node_modules/

volumes:
  dynamodata: {}
  ignore:
